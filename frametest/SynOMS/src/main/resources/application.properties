server.port=8080
server.address=localhost
server.contextPath=/
spring.datasource.url=jdbc:oracle:thin:@192.168.220.143:1521:orcl
spring.datasource.username=synitil
spring.datasource.password=synitil
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# Redis数据库索引（默认为0）  
spring.redis.database=0
# Redis服务器地址  
spring.redis.host=192.168.220.133
## Redis服务器连接端口  
spring.redis.port=6379
#spring.redis.cluster.nodes=192.168.220.133:6379,192.168.220.133:6380,192.168.220.134:6379,192.168.220.134:6380,192.168.220.135:6379,192.168.220.135:6380
# Redis服务器连接密码（默认为空）  
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）  
spring.redis.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）  
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接  
spring.redis.pool.max-idle=10
# 连接池中的最小空闲连接  
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）  
spring.redis.timeout=1000
mybatis.mapper-locations=classpath:/com/sanhui/synitil/workflow/dao/mapper/*.xml
spring.activiti.check-process-definitions=true
logging.level.com.sanhui.synitil.workflow.dao=debug
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.group-id=synitil
spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.bootstrap-servers=192.168.220.133:9092,192.168.220.134:9092,192.168.220.135:9092
spring.kafka.consumer.bootstrap-servers=192.168.220.133:9092
#spring.kafka.producer.bootstrap-servers=192.168.220.133:9092,192.168.220.134:9092,192.168.220.135:9092
spring.kafka.producer.bootstrap-servers=192.168.220.133:9092
logging.level.kafka=debug